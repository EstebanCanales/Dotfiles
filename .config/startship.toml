add_newline = false  

format = """
$username\
$hostname\
$directory\
$git_branch\
$git_state\
$git_status\
$git_metrics\
$fill\
$nodejs\
$cmd_duration $jobs $time\
$line_break\
$character"""


[fill]
symbol = " "

[directory]
style = "blue"
read_only = " Ô†Ω"
truncation_length = 4
truncate_to_repo = false

[character]
success_symbol = "[‚ùØ](white)"
error_symbol = "[‚ùØ](red)"
vicmd_symbol = "[‚ùÆ](green)"

[git_branch]
symbol = "Ôêò "
format = "[$symbol$branch]($style) "
style = "bright-black"

[jobs]
symbol = "ÔÄì"
style = "bold red"
number_threshold = 1
format = "[$symbol]($style)"

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "cyan"

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bright-black"

[git_metrics]
disabled = false

[cmd_duration]
format = "[$duration]($style)"
style = "yellow"

[memory_usage]
symbol = "Ô°ö "

[rust]
symbol = "Óû® "

[time]
disabled = false
style = "bold white"
format = "[$time]($style)"

[custom.stunnel]
when = "ps aux | grep stunnel | grep -v grep"
command = "ps -o etime= -p $(ps aux | grep stunnel | grep -v grep | awk '{print $2}')"
style = "red"
format = "[TUNNEL OPEN for $output]($style)"

[buf]
format = '(with [$symbol$version ]($style))'

[bun]
format = '(via [$symbol($version )]($style))'

[c]
format = '(via [$symbol($version(-$name) )]($style))'

[cmake]
format = '(via [$symbol($version )]($style))'

[cobol]
format = '(via [$symbol($version )]($style))'

[crystal]
format = '(via [$symbol($version )]($style))'

[daml]
format = '(via [$symbol($version )]($style))'

[dart]
format = '(via [$symbol($version )]($style))'

[deno]
format = '(via [$symbol($version )]($style))'

[dotnet]
format = '(via [$symbol($version )]($style))'

[elixir]
format = '(via [$symbol($version \(OTP $otp_version\) )]($style))'

[elm]
format = '(via [$symbol($version )]($style))'

[erlang]
format = '(via [$symbol($version )]($style))'

[fennel]
format = '(via [$symbol($version )]($style))'

[gleam]
format = '(via [$symbol($version )]($style))'

[golang]
format = '(via [$symbol($version )]($style))'

[haskell]
format = '(via [$symbol($version )]($style))'

[helm]
format = '(via [$symbol($version )]($style))'

[java]
format = '(via [$symbol($version )]($style))'

[julia]
format = '(via [$symbol($version )]($style))'

[kotlin]
format = '(via [$symbol($version )]($style))'

[lua]
format = '(via [$symbol($version )]($style))'

[nim]
format = '(via [$symbol($version )]($style))'

[nodejs]
format = '(via [$symbol($version )]($style))'

[ocaml]
format = '(via [$symbol($version )(\($switch_indicator$switch_name\) )]($style))'

[opa]
format = '(via [$symbol($version )]($style))'
[package]
format = '(is [$symbol$version]($style) )'

[perl]
format = '(via [$symbol($version )]($style))'

[php]
format = '(via [$symbol($version )]($style))'

[purescript]
format = '(via [$symbol($version )]($style))'

[python]
format = '(via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style))'

[quarto]
format = '(via [$symbol($version )]($style))'

[raku]
format = '(via [$symbol($version-$vm_version )]($style))'

[red]
format = '(via [$symbol($version )]($style))'

[rlang]
format = '(via [$symbol($version )]($style))'

[ruby]
format = '(via [$symbol($version )]($style))'

[rust]
format = '(via [$symbol($version )]($style))'

[scala]
format = '(via [$symbol($version )]($style))'

[swift]
format = '(via [$symbol($version )]($style))'

[typst]
format = '(via [$symbol($version )]($style))'


[buf]
format = '(with [$symbol$version ]($style))'

[bun]
format = '(via [$symbol($version )]($style))'

[c]
format = '(via [$symbol($version(-$name) )]($style))'

[cmake]
format = '(via [$symbol($version )]($style))'

[cobol]
format = '(via [$symbol($version )]($style))'

[crystal]
format = '(via [$symbol($version )]($style))'

[daml]
format = '(via [$symbol($version )]($style))'

[dart]
format = '(via [$symbol($version )]($style))'

[deno]
format = '(via [$symbol($version )]($style))'

[dotnet]
format = '(via [$symbol($version )(üéØ $tfm )]($style))'

[elixir]
format = '(via [$symbol($version \(OTP $otp_version\) )]($style))'

[elm]
format = '(via [$symbol($version )]($style))'

[erlang]
format = '(via [$symbol($version )]($style))'

[fennel]
format = '(via [$symbol($version )]($style))'

[gleam]
format = '(via [$symbol($version )]($style))'

[golang]
format = '(via [$symbol($version )]($style))'

[haskell]
format = '(via [$symbol($version )]($style))'

[helm]
format = '(via [$symbol($version )]($style))'

[java]
format = '(via [$symbol($version )]($style))'

[julia]
format = '(via [$symbol($version )]($style))'

[kotlin]
format = '(via [$symbol($version )]($style))'

[lua]
format = '(via [$symbol($version )]($style))'

[nim]
format = '(via [$symbol($version )]($style))'

[nodejs]
format = '(via [$symbol($version )]($style))'

[ocaml]
format = '(via [$symbol($version )(\($switch_indicator$switch_name\) )]($style))'

[opa]
format = '(via [$symbol($version )]($style))'
[package]
format = '(is [$symbol$version]($style) )'

[perl]
format = '(via [$symbol($version )]($style))'

[php]
format = '(via [$symbol($version )]($style))'

[purescript]
format = '(via [$symbol($version )]($style))'

[python]
format = '(via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style))'

[quarto]
format = '(via [$symbol($version )]($style))'

[raku]
format = '(via [$symbol($version-$vm_version )]($style))'

[red]
format = '(via [$symbol($version )]($style))'

[rlang]
format = '(via [$symbol($version )]($style))'

[ruby]
format = '(via [$symbol($version )]($style))'

[rust]
format = '(via [$symbol($version )]($style))'

[scala]
format = '(via [$symbol($version )]($style))'

[swift]
format = '(via [$symbol($version )]($style))'

[typst]
format = '(via [$symbol($version )]($style))'

[vagrant]
format = '(via [$symbol($version )]($style))'

[vlang]
format = '(via [$symbol($version )]($style))'

[zig]
format = '(via [$symbol($version )]($style))'

[gcloud]
disabled = true

[aws]
disabled = true
[vagrant]
format = '(via [$symbol($version )]($style))'

[vlang]
format = '(via [$symbol($version )]($style))'

[zig]
format = '(via [$symbol($version )]($style))'

[gcloud]
disabled = true

[aws]
disabled = true
